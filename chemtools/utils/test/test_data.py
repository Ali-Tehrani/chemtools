# -*- coding: utf-8 -*-
# ChemTools is a collection of interpretive chemical tools for
# analyzing outputs of the quantum chemistry calculations.
#
# Copyright (C) 2014-2015 The ChemTools Development Team
#
# This file is part of ChemTools.
#
# ChemTools is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 3
# of the License, or (at your option) any later version.
#
# ChemTools is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, see <http://www.gnu.org/licenses/>
#
# --
"""Expected values computed with other softwares for testing purposes."""

import numpy as np


def get_cube_data_ch4_uhf_ccpvdz():
    # ch4_uhf_ccpvdz.fchk alongside cubegen g09_C.01 was used to generate these data
    # coordinates of points generated by CubeGen with spacing=1.5, padding=0.5 & rotation=False
    points = np.array([[-1.50003968e+00, -2.24996410e+00, -2.25000756e+00],
                       [-1.50003968e+00, -2.24996410e+00, -7.50007559e-01],
                       [-1.50003968e+00, -2.24996410e+00,  7.49992441e-01],
                       [-1.50003968e+00, -7.49964095e-01, -2.25000756e+00],
                       [-1.50003968e+00, -7.49964095e-01, -7.50007559e-01],
                       [-1.50003968e+00, -7.49964095e-01,  7.49992441e-01],
                       [-1.50003968e+00,  7.50035905e-01, -2.25000756e+00],
                       [-1.50003968e+00,  7.50035905e-01, -7.50007559e-01],
                       [-1.50003968e+00,  7.50035905e-01,  7.49992441e-01],
                       [-3.96834136e-05, -2.24996410e+00, -2.25000756e+00],
                       [-3.96834136e-05, -2.24996410e+00, -7.50007559e-01],
                       [-3.96834136e-05, -2.24996410e+00,  7.49992441e-01],
                       [-3.96834136e-05, -7.49964095e-01, -2.25000756e+00],
                       [-3.96834136e-05, -7.49964095e-01, -7.50007559e-01],
                       [-3.96834136e-05, -7.49964095e-01,  7.49992441e-01],
                       [-3.96834136e-05,  7.50035905e-01, -2.25000756e+00],
                       [-3.96834136e-05,  7.50035905e-01, -7.50007559e-01],
                       [-3.96834136e-05,  7.50035905e-01,  7.49992441e-01]])
    # density evaluated by Gaussian09_C.01's cubegen through kind=gradient
    density = np.array([1.20197E-03, 4.97511E-03, 1.58548E-02,
                        1.41180E-02, 4.84137E-02, 2.20902E-01,
                        5.97708E-02, 9.04929E-02, 5.67771E-02,
                        4.06980E-03, 2.96792E-02, 2.13278E-02,
                        2.27637E-02, 1.87497E-01, 1.86016E-01,
                        6.14965E-02, 2.17852E-01, 2.16963E-01])
    # gradient evaluated by Gaussian09_C.01's cubegen through kind=gradient
    gradient = np.array([[ 1.03099E-03,  1.71776E-03,  1.23231E-03],
                         [ 4.92546E-03,  8.25758E-03,  4.89861E-03],
                         [ 8.53328E-03,  3.45392E-02,  3.89404E-03],
                         [ 1.51581E-02,  2.26785E-02,  1.71295E-02],
                         [ 6.71648E-02,  5.67256E-02,  3.68025E-02],
                         [ 1.82417E-01,  1.09969E-01,  2.35543E-01],
                         [ 1.06787E-01, -1.40951E-02,  1.04607E-01],
                         [ 1.50298E-01, -5.10777E-02, -4.80703E-02],
                         [ 6.79556E-02, -8.95081E-02, -1.56085E-02],
                         [ 3.07146E-03,  4.92394E-03,  6.98303E-03],
                         [ 3.56888E-02,  5.20531E-02,  1.90839E-02],
                         [ 5.84257E-03,  4.06678E-02, -1.86760E-02],
                         [-7.37212E-03,  2.70001E-02,  3.99220E-02],
                         [ 8.65628E-02,  1.47124E-01,  1.72183E-01],
                         [-8.15417E-02,  1.54436E-01, -1.67271E-01],
                         [-8.52931E-02, -2.06051E-02,  1.07082E-01],
                         [-1.09788E-01, -1.87020E-01,  8.36944E-02],
                         [ 1.27961E-01, -1.10866E-01, -1.61019E-01]])
    # esp evaluated by Gaussian09_C.01's cubegen through kind=potential
    esp = np.array([-2.01184E-03, 8.93049E-03, 3.68800E-02,
                     3.16097E-02, 1.37929E-01, 9.96864E-01,
                     3.74824E-01, 2.10468E-01, 1.52163E-01,
                     3.17287E-03, 6.34498E-02, 3.11248E-02,
                     3.53474E-02, 1.01292E+00, 1.01225E+00,
                     2.07022E-01, 1.02390E+00, 1.02375E+00])
    return points, density, gradient, esp
