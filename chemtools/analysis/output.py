# -*- coding: utf-8 -*-
# ChemTools is a collection of interpretive chemical tools for
# analyzing outputs of the quantum chemistry calculations.
#
# Copyright (C) 2014-2015 The ChemTools Development Team
#
# This file is part of ChemTools.
#
# ChemTools is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 3
# of the License, or (at your option) any later version.
#
# ChemTools is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, see <http://www.gnu.org/licenses/>
#
# --
"""Output Module.

   This module contains functions for generating scripts for visualizing
   purposes using VMD, GaussView, etc.
"""


def print_vmd_script_nci(scriptfile, densfile, rdgfile, isosurf=0.5, denscut=0.05):
    r"""
    Generate VMD (Visual Molecular Dynamics) script for visualizing NCI
    (non-covalent interactions) isosurfaces subject to the constraint of
    density(r) < denscut, i.e. low-density, and colored based on the
    sign(:math:`\lambda_2`) :math:`\rho`.

    Parameters
    ----------
    scriptfile : str
        Name of VMD script file to generate.
    densfile : str
        Name of density cube file.
    rdgfile : str
        Name of reduced density gradient cube file.
    isosurf : float, default=0.5
        Reduced density gradient isosurface to visualize.
    denscut : float, default=0.05
        Density cutoff used in creating reduced density gradient cube file.
        Similar to NCIPlot program, reduced density gradient of points with
        density > denscut will be set to 100.0 to display reduced density gradient
        isosurface subject to the constraint of low density.

    Note
    ----
    The script is the same as the one generated by NCIPlot software version 1.0.
    """
    with open(scriptfile, 'w') as f:
        print >> f, '#!/usr/local/bin/vmd'
        print >> f, '# VMD script written by save_state $Revision: 1.41 $'
        print >> f, '# VMD version: 1.8.6               '
        print >> f, 'set viewplist                      '
        print >> f, 'set fixedlist                      '
        print >> f, '#'
        print >> f, '# Display settings                 '
        print >> f, 'display projection   Orthographic  '
        print >> f, 'display nearclip set 0.000000      '
        print >> f, '#'
        print >> f, '# load new molecule                '
        print >> f, ('mol new {0}  type cube first 0 last -1 step 1 filebonds 1 autobonds 1 waitfor all'
                     ''.format(densfile))
        print >> f, ('mol addfile {0}  type cube first 0 last -1 step 1 filebonds 1 autobonds 1 waitfor all'
                     ''.format(rdgfile))
        print >> f, '#'
        print >> f, '# representation of the atoms'
        print >> f, 'mol delrep 0 top'
        print >> f, 'mol representation CPK 1.000000 0.300000 118.000000 131.000000'
        print >> f, 'mol color Name'
        print >> f, 'mol selection {all}'
        print >> f, 'mol material Opaque'
        print >> f, 'mol addrep top'
        print >> f, '#'
        print >> f, '# add representation of the surface'
        print >> f, 'mol representation Isosurface {0:.5f} 1.0 0.0 0.0 1 1'.format(isosurf)
        print >> f, 'mol color Volume 0'
        print >> f, 'mol selection {all}'
        print >> f, 'mol material Opaque'
        print >> f, 'mol addrep top'
        print >> f, 'mol selupdate 1 top 0'
        print >> f, 'mol colupdate 1 top 0'
        print >> f, 'mol scaleminmax top 1 {0:.6f} {1:.6f}'.format(-denscut, denscut)
        print >> f, 'mol smoothrep top 1 0'
        print >> f, 'mol drawframes top 1 {now}'
        print >> f, 'color scale method BGR'
        print >> f, 'set colorcmds {{color Name {C} gray}}'
        print >> f, '#some more'


def print_vmd_script_isosurface(scriptfile, isofile, colorfile=None, isosurf=0.5, material='Opaque',
                                scalemin=-0.05, scalemax=0.05, colorscheme='RGB', negative=False):
    """
    Generate VMD (Visual Molecular Dynamics) script for visualizing the isosurface based on
    one cube file when coloring by the value of another cube file on the isosurface.

    Parameters
    ----------
    scriptfile : str
        Name of VMD script file to generate.
    isofile : str
        Name of cube file used in VMD script for visualizing the isosurface.
    colorfile : str, default=None
        Name of cube file used in VMD script for coloring the isosurface.
        If None, the isofile is used for coloring.
    isosurf : float, default=0.5
        The value of the isosurface to visualize used in VMD script.
    material : str, default='Opaque'
        The material setting of the isosurface used in VMD script.

            Options: 'Opaque', 'Transparent', 'BrushedMetal', 'Diffuse', 'Ghost',
            'Glass1', 'Glass2', 'Glass3', 'Glossy', 'HardPlastic', 'MetallicPastel',
            'Steel', 'Translucent', 'Edgy', 'EdgyShiny', 'EdgyGlass', 'Goodsell',
            'AOShiny', 'AOChalky', 'AOEdgy', 'BlownGlass', 'GlassBubble', 'RTChrome'.

    scalemin : float, default=-0.05
        Smallest value to color on the isosurface used in VMD script.
    scalemax : float, default=0.05
        Largest value to color on the isosurface used in VMD script.
    colorscheme : str or int, default='RGB'
        Color scheme used in VMD script for coloring the isosurface.

            For color-scale, a sting is needed specifying the color scheme. The default is 'RGB',
            ans more options are available in table below.
            Alternatively, the isosurface can be colored with just one color.
            For this option, an integer is needed specifying the color.
            1057 colors are available in VMD, check the program or website for more details.
            If you want to plot the negative isosurface as well, a list of two colors can be given
            to specify the color of positive and negative iso-surfaces. e.g. [0, 1]

            =======  =====================================
            Options  Description
            =======  =====================================
            'RGB'    small=red, middle=green, large=blue
            'BGR'    small=blue, middle=green, large=red
            'RWB'    small=red, middle=white, large=blue
            'BWR'    small=blue, middle=white, large=red
            'RWG'    small=red, middle=white, large=green
            'GWR'    small=green, middle=white, large=red
            'GWB'    small=green, middle=white, large=blue
            'BWG'    small=blue, middle=white, large=green
            'BlkW'   small=black, large=white
            'WBlk'   small=white, large=black
            =======  =====================================
    negative : bool, default=False
        Determines if you want to plot the negative of the isosurface as well. The default is false.
    """
    if isinstance(colorscheme, int):
        colorscheme = [colorscheme]

    with open(scriptfile, 'w') as f:
        print >> f, '#!/usr/local/bin/vmd'
        print >> f, '# VMD script written by save_state $Revision: 1.41 $'
        print >> f, '# VMD version: 1.8.6               '
        print >> f, 'set viewplist                      '
        print >> f, 'set fixedlist                      '
        print >> f, '#'
        print >> f, '# Display settings                 '
        print >> f, 'display projection   Orthographic  '
        print >> f, 'display nearclip set 0.000000      '
        print >> f, '#'
        print >> f, '# load new molecule                '
        if colorfile is not None:
            print >> f, ('mol new {0}  type cube first 0 last -1 step 1 filebonds 1 autobonds 1 waitfor all'
                         ''.format(colorfile))
            print >> f, ('mol addfile {0}  type cube first 0 last -1 step 1 filebonds 1 autobonds 1 waitfor all'
                         ''.format(isofile))
        else:
            print >> f, ('mol new {0}  type cube first 0 last -1 step 1 filebonds 1 autobonds 1 waitfor all'
                         ''.format(isofile))
        print >> f, '#'
        print >> f, '# representation of the atoms'
        print >> f, 'mol delrep 0 top'
        print >> f, 'mol representation CPK 1.000000 0.300000 118.000000 131.000000'
        print >> f, 'mol color Name'
        print >> f, 'mol selection {all}'
        print >> f, 'mol material Opaque'
        print >> f, 'mol addrep top'
        print >> f, '#'
        print >> f, '# add representation of the surface'
        if colorfile is not None:
            print >> f, 'mol representation Isosurface {0:.5f} 1.0 0.0 0.0 1 1'.format(isosurf)
            print >> f, 'mol color Volume 0'
            print >> f, 'mol selection {all}'
            print >> f, 'mol material {0}'.format(material)
            print >> f, 'mol addrep top'
            print >> f, 'mol selupdate 1 top 0'
            print >> f, 'mol colupdate 1 top 0'
            print >> f, 'mol scaleminmax top 1 {0:.6f} {1:.6f}'.format(scalemin, scalemax)
            print >> f, 'mol smoothrep top 1 0'
            print >> f, 'mol drawframes top 1 {now}'
            print >> f, 'color scale method {0}'.format(colorscheme)
            print >> f, 'set colorcmds {{color Name {C} gray}}'
        elif isinstance(colorscheme, str):
            print >> f, 'mol representation Isosurface {0:.5f} 0 0 0 1 1'.format(isosurf)
            print >> f, 'mol color Volume 0'
            print >> f, 'mol selection {all}'
            print >> f, 'mol material {0}'.format(material)
            print >> f, 'mol addrep top'
            print >> f, 'mol selupdate 1 top 0'
            print >> f, 'mol colupdate 1 top 0'
            print >> f, 'mol scaleminmax top 1 {0:.6f} {1:.6f}'.format(scalemin, scalemax)
            print >> f, 'mol smoothrep top 1 0'
            print >> f, 'mol drawframes top 1 {now}'
            print >> f, 'color scale method {0}'.format(colorscheme)
            print >> f, 'set colorcmds {{color Name {C} gray}}'
        elif isinstance(colorscheme[0], int):
            print >> f, 'mol representation Isosurface {0:.5f} 0 0 0 1 1'.format(isosurf)
            print >> f, 'mol color ColorID {0}'.format(colorscheme[0])
            print >> f, 'mol selection {all}'
            print >> f, 'mol material Opaque'
            print >> f, 'mol addrep top'
            print >> f, 'mol selupdate 1 top 0'
            print >> f, 'mol colupdate 1 top 0'
            print >> f, 'mol scaleminmax top 1 0.000000 0.000000'
            print >> f, 'mol smoothrep top 1 0'
            print >> f, 'mol drawframes top 1 {now}'
            print >> f, 'color scale method RGB'
            print >> f, 'set colorcmds {{color Name {C} gray}}'
        if negative:
            if colorfile is not None:
                print >> f, 'mol representation Isosurface {0:.5f} 1.0 0.0 0.0 1 1'.format(-isosurf)
                print >> f, 'mol color Volume 0'
                print >> f, 'mol selection {all}'
                print >> f, 'mol material {0}'.format(material)
                print >> f, 'mol addrep top'
                print >> f, 'mol selupdate 1 top 0'
                print >> f, 'mol colupdate 1 top 0'
                print >> f, 'mol scaleminmax top 1 {0:.6f} {1:.6f}'.format(scalemin, scalemax)
                print >> f, 'mol smoothrep top 1 0'
                print >> f, 'mol drawframes top 1 {now}'
                print >> f, 'color scale method {0}'.format(colorscheme)
                print >> f, 'set colorcmds {{color Name {C} gray}}'
            elif isinstance(colorscheme, str):
                print >> f, 'mol representation Isosurface {0:.5f} 0 0 0 1 1'.format(-isosurf)
                print >> f, 'mol color Volume 0'
                print >> f, 'mol selection {all}'
                print >> f, 'mol material {0}'.format(material)
                print >> f, 'mol addrep top'
                print >> f, 'mol selupdate 1 top 0'
                print >> f, 'mol colupdate 1 top 0'
                print >> f, 'mol scaleminmax top 1 {0:.6f} {1:.6f}'.format(scalemin, scalemax)
                print >> f, 'mol smoothrep top 1 0'
                print >> f, 'mol drawframes top 1 {now}'
                print >> f, 'color scale method {0}'.format(colorscheme)
                print >> f, 'set colorcmds {{color Name {C} gray}}'
            elif isinstance(colorscheme[1], int):
                print >> f, 'mol representation Isosurface {0:.5f} 0 0 0 1 1'.format(-isosurf)
                print >> f, 'mol color ColorID {0}'.format(colorscheme[1])
                print >> f, 'mol selection {all}'
                print >> f, 'mol material Opaque'
                print >> f, 'mol addrep top'
                print >> f, 'mol selupdate 1 top 0'
                print >> f, 'mol colupdate 1 top 0'
                print >> f, 'mol scaleminmax top 1 0.000000 0.000000'
                print >> f, 'mol smoothrep top 1 0'
                print >> f, 'mol drawframes top 1 {now}'
                print >> f, 'color scale method RGB'
                print >> f, 'set colorcmds {{color Name {C} gray}}'
        print >> f, '#some more'
